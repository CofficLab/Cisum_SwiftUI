on:
  push:
    branches:
      - main

permissions:
  contents: write

name: Bump

env:
  tag: ${{ github.event.head_commit.id }}

jobs:
  bump:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: 更新版本号
        run: |
          # 读取文件中的版本号
          version=$(xcodebuild -showBuildSettings -quiet | grep -m 1 MARKETING_VERSION | cut -d= -f2)
          version=${version# }

          echo "旧版本号->$version"

          # 将版本号拆分为数组
          IFS='.' read -r -a versionArray <<< "$version"

          # 递增最后一位数字
          ((versionArray[2]++))

          # 重新组合版本号
          newVersion="${versionArray[0]}.${versionArray[1]}.${versionArray[2]}"

          echo "新版本号->$newVersion"

          # 新版本号写入文件
          file=$(find . -type f -name "*.pbxproj" | head -n 1)

          echo "新版本号将要写入文件->$file"

          sed -i 's/MARKETING_VERSION = $version/MARKETING_VERSION = $newVersion/g' "$file"

          updatedVersion=$(xcodebuild -showBuildSettings -quiet | grep -m 1 MARKETING_VERSION | cut -d= -f2)
          echo "更新后的版本号->$updatedVersion"

          git status
      - name: 更新构建号
        uses: yanamura/ios-bump-version@v1
      - name: 生成标签
        run: |
          version=$(xcodebuild -showBuildSettings -quiet | grep -m 1 MARKETING_VERSION | cut -d= -f2)
          version=${version# }
          build=$(agvtool what-version -terse)

          echo "tag=v$version($build)" >> $GITHUB_ENV
      - name: 打标签并推送到仓库
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'chore(workflow): Bump a new version'
          commit_user_name: GitHub Action
          tagging_message: ${{ env.tag }}
  rebase:
    needs:
      - bump
    runs-on: ubuntu-latest
    steps:
      - name: 拉取 dev 分支
        uses: actions/checkout@v3
        with:
          ref: dev
      - name: 拉取 main 分支
        run: git fetch origin main
      - name: Rebase dev on main
        continue-on-error: true
        run: git rebase origin/main
      - name: Push the rebased dev branch
        continue-on-error: true
        run: git push origin dev
