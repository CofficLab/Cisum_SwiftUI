---
globs: *.swift
description: 统一 Swift/SwiftUI 视图文件的 MARK 分组规范（Action / Setter / Event Handler / Preview）
---

# Swift 文件 MARK 分组规范（基于 `AudioList.swift`）

本规则约束 Swift/SwiftUI 文件的组织结构，统一用 `// MARK: -` 对函数进行分组，以便快速导航与维护。请参考示例文件：

[Plugins/Audio/Views/AudioList.swift](mdc:Plugins/Audio/Views/AudioList.swift)

## 分组顺序与命名

在一个 Swift 文件（尤其是 SwiftUI 视图）中，建议采用如下分组，并保持顺序一致：

1. `// MARK: - Action`：用户交互触发的行为、对外暴露的动作、业务命令。
2. `// MARK: - Setter`：状态/属性的集中更新方法（尽量 `@MainActor` 明确 UI 线程修改）。
3. `// MARK: - Event Handler`：订阅通知、Combine 流、回调等事件处理函数。
4. `// MARK: - Preview`：文件结尾处的多尺寸预览（遵循预览规则）。

可选分组（如有需要）：

- `// MARK: - Init & Life Cycle`：初始化与生命周期（若非 View，可放在最前）。
- `// MARK: - Private Helpers`：与外部无关的私有工具函数。
- `// MARK: - Types`：仅供该文件使用的内部 `enum`/`struct` 等类型定义。

## 组织方式建议

- 使用 `extension TypeName { ... }` 将不同分组的函数隔离，提升可读性与导航效率。
- 分组命名使用英文，首字母大写，短横线风格：`// MARK: - Action`。
- 与 UI 状态相关的写操作建议集中到 `Setter` 分组，避免在事件处理里直接散落修改状态。
- 事件处理函数命名请语义化：`onXxx`/`handleXxx`。
- 上层交互动作用动词短语：`play()`, `refresh()`, `delete(at:)`。

## 预览（与 swift-preview-rule 协同）

文件末尾必须包含多尺寸预览，使用 `AppPreview()` 作为默认内容，满足不同设备调试需求。若已有其他预览，至少补齐以下四种：

```swift
#if os(macOS)
#Preview("App - Large") {
    AppPreview()
        .frame(width: 600, height: 1000)
}

#Preview("App - Small") {
    AppPreview()
        .frame(width: 600, height: 600)
}
#endif

#if os(iOS)
#Preview("iPhone") {
    AppPreview()
}
#endif
```

请同时参照项目内的预览规则文件：`swift-preview-rule`。

## 模板示例（视图文件骨架）

```swift
import SwiftUI

struct MyView: View {
    @State private var isLoading: Bool = false
    @State private var items: [String] = []

    var body: some View {
        List(items, id: \.
self) { Text($0) }
            .onAppear(perform: handleOnAppear)
    }
}

// MARK: - Action
extension MyView {
    func refresh() {
        // 触发刷新
    }
}

// MARK: - Setter
extension MyView {
    @MainActor
    func setItems(_ newValue: [String]) {
        items = newValue
        isLoading = false
    }
}

// MARK: - Event Handler
extension MyView {
    func handleOnAppear() {
        isLoading = true
        // 订阅 / 拉取数据等
    }
}

// MARK: - Preview
#if os(macOS)
#Preview("App - Large") {
    AppPreview()
        .frame(width: 600, height: 1000)
}

#Preview("App - Small") {
    AppPreview()
        .frame(width: 600, height: 600)
}
#endif

#if os(iOS)
#Preview("iPhone") {
    AppPreview()
}
#endif
```

## 注意事项

- 保持分组顺序统一，便于团队协作与代码审查。
- 仅在分组顶部使用 `// MARK: -`，避免在函数内部穿插标记造成干扰。
- 分组函数尽量语义单一，避免混合业务与状态更新；必要时将状态更新抽到 `Setter`。
- 参考实现可见：[Plugins/Audio/Views/AudioList.swift](mdc:Plugins/Audio/Views/AudioList.swift)
